#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Ten kod został wygenerowany przez narzędzie.
//     Wersja wykonawcza:4.0.30319.42000
//
//     Zmiany w tym pliku mogą spowodować nieprawidłowe zachowanie i zostaną utracone, jeśli
//     kod zostanie ponownie wygenerowany.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Data.Database
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="LibraryLINQDatabase")]
	public partial class LibraryLinqDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertBookDB(BookDB instance);
    partial void UpdateBookDB(BookDB instance);
    partial void DeleteBookDB(BookDB instance);
    partial void InsertEventDB(EventDB instance);
    partial void UpdateEventDB(EventDB instance);
    partial void DeleteEventDB(EventDB instance);
    partial void InsertReaderDB(ReaderDB instance);
    partial void UpdateReaderDB(ReaderDB instance);
    partial void DeleteReaderDB(ReaderDB instance);
    partial void InsertStateDB(StateDB instance);
    partial void UpdateStateDB(StateDB instance);
    partial void DeleteStateDB(StateDB instance);
        #endregion
        public LibraryLinqDataContext()
        {
            OnCreated();
        }

        public LibraryLinqDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LibraryLinqDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LibraryLinqDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LibraryLinqDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<BookDB> BookDB
		{
			get
			{
				return this.GetTable<BookDB>();
			}
		}
		
		public System.Data.Linq.Table<EventDB> EventDB
		{
			get
			{
				return this.GetTable<EventDB>();
			}
		}
		
		public System.Data.Linq.Table<ReaderDB> ReaderDB
		{
			get
			{
				return this.GetTable<ReaderDB>();
			}
		}
		
		public System.Data.Linq.Table<StateDB> StateDB
		{
			get
			{
				return this.GetTable<StateDB>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BookDB")]
	public partial class BookDB : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _title;
		
		private string _publisher;
		
		private string _author;
		
		private System.Nullable<int> _numberOfPages;
		
		private string _genre;
		
		private EntitySet<EventDB> _EventDB;
		
		private EntitySet<StateDB> _StateDB;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OntitleChanging(string value);
    partial void OntitleChanged();
    partial void OnpublisherChanging(string value);
    partial void OnpublisherChanged();
    partial void OnauthorChanging(string value);
    partial void OnauthorChanged();
    partial void OnnumberOfPagesChanging(System.Nullable<int> value);
    partial void OnnumberOfPagesChanged();
    partial void OngenreChanging(string value);
    partial void OngenreChanged();
    #endregion
		
		public BookDB()
		{
			this._EventDB = new EntitySet<EventDB>(new Action<EventDB>(this.attach_EventDB), new Action<EventDB>(this.detach_EventDB));
			this._StateDB = new EntitySet<StateDB>(new Action<StateDB>(this.attach_StateDB), new Action<StateDB>(this.detach_StateDB));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_title", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this.OntitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("title");
					this.OntitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_publisher", DbType="NVarChar(255)")]
		public string publisher
		{
			get
			{
				return this._publisher;
			}
			set
			{
				if ((this._publisher != value))
				{
					this.OnpublisherChanging(value);
					this.SendPropertyChanging();
					this._publisher = value;
					this.SendPropertyChanged("publisher");
					this.OnpublisherChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_author", DbType="NVarChar(255)")]
		public string author
		{
			get
			{
				return this._author;
			}
			set
			{
				if ((this._author != value))
				{
					this.OnauthorChanging(value);
					this.SendPropertyChanging();
					this._author = value;
					this.SendPropertyChanged("author");
					this.OnauthorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_numberOfPages", DbType="Int")]
		public System.Nullable<int> numberOfPages
		{
			get
			{
				return this._numberOfPages;
			}
			set
			{
				if ((this._numberOfPages != value))
				{
					this.OnnumberOfPagesChanging(value);
					this.SendPropertyChanging();
					this._numberOfPages = value;
					this.SendPropertyChanged("numberOfPages");
					this.OnnumberOfPagesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_genre", DbType="NVarChar(100)")]
		public string genre
		{
			get
			{
				return this._genre;
			}
			set
			{
				if ((this._genre != value))
				{
					this.OngenreChanging(value);
					this.SendPropertyChanging();
					this._genre = value;
					this.SendPropertyChanged("genre");
					this.OngenreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BookDB_EventDB", Storage="_EventDB", ThisKey="id", OtherKey="bookId")]
		public EntitySet<EventDB> EventDB
		{
			get
			{
				return this._EventDB;
			}
			set
			{
				this._EventDB.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BookDB_StateDB", Storage="_StateDB", ThisKey="id", OtherKey="bookId")]
		public EntitySet<StateDB> StateDB
		{
			get
			{
				return this._StateDB;
			}
			set
			{
				this._StateDB.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_EventDB(EventDB entity)
		{
			this.SendPropertyChanging();
			entity.BookDB = this;
		}
		
		private void detach_EventDB(EventDB entity)
		{
			this.SendPropertyChanging();
			entity.BookDB = null;
		}
		
		private void attach_StateDB(StateDB entity)
		{
			this.SendPropertyChanging();
			entity.BookDB = this;
		}
		
		private void detach_StateDB(StateDB entity)
		{
			this.SendPropertyChanging();
			entity.BookDB = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EventDB")]
	public partial class EventDB : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _eventId;
		
		private System.Nullable<int> _userId;
		
		private System.Nullable<int> _bookId;
		
		private EntityRef<BookDB> _BookDB;
		
		private EntityRef<ReaderDB> _ReaderDB;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OneventIdChanging(int value);
    partial void OneventIdChanged();
    partial void OnuserIdChanging(System.Nullable<int> value);
    partial void OnuserIdChanged();
    partial void OnbookIdChanging(System.Nullable<int> value);
    partial void OnbookIdChanged();
    #endregion
		
		public EventDB()
		{
			this._BookDB = default(EntityRef<BookDB>);
			this._ReaderDB = default(EntityRef<ReaderDB>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_eventId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int eventId
		{
			get
			{
				return this._eventId;
			}
			set
			{
				if ((this._eventId != value))
				{
					this.OneventIdChanging(value);
					this.SendPropertyChanging();
					this._eventId = value;
					this.SendPropertyChanged("eventId");
					this.OneventIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userId", DbType="Int")]
		public System.Nullable<int> userId
		{
			get
			{
				return this._userId;
			}
			set
			{
				if ((this._userId != value))
				{
					if (this._ReaderDB.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnuserIdChanging(value);
					this.SendPropertyChanging();
					this._userId = value;
					this.SendPropertyChanged("userId");
					this.OnuserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bookId", DbType="Int")]
		public System.Nullable<int> bookId
		{
			get
			{
				return this._bookId;
			}
			set
			{
				if ((this._bookId != value))
				{
					if (this._BookDB.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnbookIdChanging(value);
					this.SendPropertyChanging();
					this._bookId = value;
					this.SendPropertyChanged("bookId");
					this.OnbookIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BookDB_EventDB", Storage="_BookDB", ThisKey="bookId", OtherKey="id", IsForeignKey=true)]
		public BookDB BookDB
		{
			get
			{
				return this._BookDB.Entity;
			}
			set
			{
				BookDB previousValue = this._BookDB.Entity;
				if (((previousValue != value) 
							|| (this._BookDB.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BookDB.Entity = null;
						previousValue.EventDB.Remove(this);
					}
					this._BookDB.Entity = value;
					if ((value != null))
					{
						value.EventDB.Add(this);
						this._bookId = value.id;
					}
					else
					{
						this._bookId = default(Nullable<int>);
					}
					this.SendPropertyChanged("BookDB");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ReaderDB_EventDB", Storage="_ReaderDB", ThisKey="userId", OtherKey="id", IsForeignKey=true)]
		public ReaderDB ReaderDB
		{
			get
			{
				return this._ReaderDB.Entity;
			}
			set
			{
				ReaderDB previousValue = this._ReaderDB.Entity;
				if (((previousValue != value) 
							|| (this._ReaderDB.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ReaderDB.Entity = null;
						previousValue.EventDB.Remove(this);
					}
					this._ReaderDB.Entity = value;
					if ((value != null))
					{
						value.EventDB.Add(this);
						this._userId = value.id;
					}
					else
					{
						this._userId = default(Nullable<int>);
					}
					this.SendPropertyChanged("ReaderDB");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ReaderDB")]
	public partial class ReaderDB : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private string _surname;
		
		private string _email;
		
		private string _phoneNumber;
		
		private string _role;
		
		private System.Nullable<decimal> _debt;
		
		private EntitySet<EventDB> _EventDB;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnsurnameChanging(string value);
    partial void OnsurnameChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnphoneNumberChanging(string value);
    partial void OnphoneNumberChanged();
    partial void OnroleChanging(string value);
    partial void OnroleChanged();
    partial void OndebtChanging(System.Nullable<decimal> value);
    partial void OndebtChanged();
    #endregion
		
		public ReaderDB()
		{
			this._EventDB = new EntitySet<EventDB>(new Action<EventDB>(this.attach_EventDB), new Action<EventDB>(this.detach_EventDB));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(100)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_surname", DbType="NVarChar(100)")]
		public string surname
		{
			get
			{
				return this._surname;
			}
			set
			{
				if ((this._surname != value))
				{
					this.OnsurnameChanging(value);
					this.SendPropertyChanging();
					this._surname = value;
					this.SendPropertyChanged("surname");
					this.OnsurnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="NVarChar(255)")]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phoneNumber", DbType="NVarChar(50)")]
		public string phoneNumber
		{
			get
			{
				return this._phoneNumber;
			}
			set
			{
				if ((this._phoneNumber != value))
				{
					this.OnphoneNumberChanging(value);
					this.SendPropertyChanging();
					this._phoneNumber = value;
					this.SendPropertyChanged("phoneNumber");
					this.OnphoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_role", DbType="NVarChar(50)")]
		public string role
		{
			get
			{
				return this._role;
			}
			set
			{
				if ((this._role != value))
				{
					this.OnroleChanging(value);
					this.SendPropertyChanging();
					this._role = value;
					this.SendPropertyChanged("role");
					this.OnroleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_debt", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> debt
		{
			get
			{
				return this._debt;
			}
			set
			{
				if ((this._debt != value))
				{
					this.OndebtChanging(value);
					this.SendPropertyChanging();
					this._debt = value;
					this.SendPropertyChanged("debt");
					this.OndebtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ReaderDB_EventDB", Storage="_EventDB", ThisKey="id", OtherKey="userId")]
		public EntitySet<EventDB> EventDB
		{
			get
			{
				return this._EventDB;
			}
			set
			{
				this._EventDB.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_EventDB(EventDB entity)
		{
			this.SendPropertyChanging();
			entity.ReaderDB = this;
		}
		
		private void detach_EventDB(EventDB entity)
		{
			this.SendPropertyChanging();
			entity.ReaderDB = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StateDB")]
	public partial class StateDB : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Nullable<int> _bookId;
		
		private int _stateId;
		
		private System.Nullable<int> _quantity;
		
		private EntityRef<BookDB> _BookDB;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnbookIdChanging(System.Nullable<int> value);
    partial void OnbookIdChanged();
    partial void OnstateIdChanging(int value);
    partial void OnstateIdChanged();
    partial void OnquantityChanging(System.Nullable<int> value);
    partial void OnquantityChanged();
    #endregion
		
		public StateDB()
		{
			this._BookDB = default(EntityRef<BookDB>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bookId", DbType="Int")]
		public System.Nullable<int> bookId
		{
			get
			{
				return this._bookId;
			}
			set
			{
				if ((this._bookId != value))
				{
					if (this._BookDB.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnbookIdChanging(value);
					this.SendPropertyChanging();
					this._bookId = value;
					this.SendPropertyChanged("bookId");
					this.OnbookIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stateId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int stateId
		{
			get
			{
				return this._stateId;
			}
			set
			{
				if ((this._stateId != value))
				{
					this.OnstateIdChanging(value);
					this.SendPropertyChanging();
					this._stateId = value;
					this.SendPropertyChanged("stateId");
					this.OnstateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_quantity", DbType="Int")]
		public System.Nullable<int> quantity
		{
			get
			{
				return this._quantity;
			}
			set
			{
				if ((this._quantity != value))
				{
					this.OnquantityChanging(value);
					this.SendPropertyChanging();
					this._quantity = value;
					this.SendPropertyChanged("quantity");
					this.OnquantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BookDB_StateDB", Storage="_BookDB", ThisKey="bookId", OtherKey="id", IsForeignKey=true)]
		public BookDB BookDB
		{
			get
			{
				return this._BookDB.Entity;
			}
			set
			{
				BookDB previousValue = this._BookDB.Entity;
				if (((previousValue != value) 
							|| (this._BookDB.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BookDB.Entity = null;
						previousValue.StateDB.Remove(this);
					}
					this._BookDB.Entity = value;
					if ((value != null))
					{
						value.StateDB.Add(this);
						this._bookId = value.id;
					}
					else
					{
						this._bookId = default(Nullable<int>);
					}
					this.SendPropertyChanged("BookDB");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
